{"version":3,"sources":["Users.js","Filters.js","App.js","api.js","serviceWorker.js","index.js"],"names":["Users","visiblePeople","handleOnClick","className","map","i","key","id","type","status","data-toggle","data-target","onClick","first_name","last_name","age","gender","Filters","handleChangeValue","searchValue","onChange","placeholder","value","checked","name","App","useEffect","fetch","then","response","json","peopleFromServer","setPeople","result","Date","getTime","dob","sort","a","b","localeCompare","useState","people","setSearchValue","searchUsers","length","filter","item","toLowerCase","includes","setTimeout","window","confirm","alert","event","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7446e7e4.chunk.js","sourcesContent":["import React from 'react';\r\nconst Users = ({ visiblePeople, handleOnClick }) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"list-group\">\r\n        {visiblePeople.map((i) => (\r\n          <>\r\n            <button key={i.id} type=\"button\" className={i.status === 'active' ? `list-group-item`\r\n              : `list-group-item disabled`} data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n              onClick={()=>handleOnClick(i.id)} >\r\n              <br></br>#{i.id} - {i.first_name} {i.last_name} - {i.age} years old {i.gender}\r\n            </button>\r\n          </>))}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users;\r\n///1)от и до. 3)список алфавит, 4)debounce?.","import React from 'react';\r\nconst Filters = ({handleChangeValue, searchValue}) => {\r\n  return (\r\n    <form className=\"filter\">\r\n      <input type=\"text\" className=\"form-control mb-2 mr-sm-2\"  onChange={handleChangeValue}\r\n        placeholder=\"Search by name...\" />\r\n\r\n      <div className=\"genderFilter\">\r\n        <label ><input type=\"radio\" onChange={handleChangeValue} value={'female'}\r\n          className=\"ui radio checkbox\" checked={searchValue === \"female\"} /> female</label>\r\n        <label ><input type=\"radio\" onChange={handleChangeValue} value={'male'}\r\n          className=\"ui radio checkbox\" checked={searchValue === \"male\"} /> male</label>\r\n        <label ><input type=\"radio\" onChange={handleChangeValue} value={\"both\"}\r\n          checked={searchValue === 'both'} className=\"ui radio checkbox\" name=\"both\" /> both</label>\r\n      </div>\r\n\r\n      <div className=\"search\">\r\n      <label><p>From:</p> <input type=\"number\" className=\"form-control mb-2 mr-sm-2\" value={searchValue} onChange={handleChangeValue} /></label>\r\n      </div>\r\n      <p><input type=\"reset\" value=\"Reset all\" className=\"btn btn-danger\" /></p>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Filters","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getUsers } from './api';\nimport Users from './Users'\nimport Filters from './Filters';\n\nconst App = () => {\n\n  useEffect(() => {\n    getUsers()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer.result.map(i=>({\n          ...i,\n          age:  ((new Date().getTime() - new Date(i.dob)) / (24 * 3600 * 365.25 * 1000)) | 0\n        }))\n          .sort((a, b) => a.first_name.localeCompare(b.first_name)))\n      })\n  }, []);\n\n  const [people, setPeople] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n\n\n  const handleOnClick = (id) => {\n    if (window.confirm(\n      `Вы действительно хотите пригласить на свидание пользователя с id = ${id}`\n    )) { alert('Приглашение отправлено')\n      setPeople([...people].filter(item => item.id !== id))\n    }\n  }\n\n  const handleChangeValue = (event) => {\n    setSearchValue(event.target.value.toLowerCase());\n  };\n\n  const searchUsers = () => (\n    searchValue.length >= 2 ? people.filter(item => item.first_name.toLowerCase().includes(searchValue) ||\n      item.last_name.toLowerCase().includes(searchValue)\n      || searchValue === \"both\" ? people : item.gender === searchValue || item.age>=searchValue) : people)\n\n      setTimeout( () => searchUsers, 400)\n   \n  const visiblePeople = searchValue ? searchUsers() : [...people];\n  \n \n\n  return (\n    <div className=\"App\">\n      <Users visiblePeople={visiblePeople}\n        handleOnClick={handleOnClick} />\n\n      <Filters handleChangeValue={handleChangeValue}\n        searchValue={searchValue} />\n\n    </div>\n  );\n}\nexport default App;\n\n","const API = \"https://gorest.co.in/public-api/users?_format=json&access-token=PJV72RKKWWAE2Z8KTztcaVLH_oRQSnjYuuEF\"\r\nexport const getUsers = () => fetch(API)\r\n  .then(response => response.json());","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}